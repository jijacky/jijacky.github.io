import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as s,d as a}from"./app-BKzoUWD5.js";const n={},t=a(`<h1 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker"><span>安装Docker</span></a></h1><h3 id="deepin安装docker" tabindex="-1"><a class="header-anchor" href="#deepin安装docker"><span>deepin安装Docker</span></a></h3><blockquote><p>deepin_64（20社区版）</p><p>docker-ce</p></blockquote><p><a href="https://wiki.deepin.org/wiki/Docker" target="_blank" rel="noopener noreferrer">关于 Deepin 中的 Docker</a> (https://wiki.deepin.org/wiki/Docker)</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><h2 id="关于-deepin-中的-docker" tabindex="-1"><a class="header-anchor" href="#关于-deepin-中的-docker"><span>关于 Deepin 中的 Docker</span></a></h2><p>Deepin 官方的应用仓库已经集成了 docker，但不是类似于 docker-ce 这样的最新版本。由于 Deepin 是基于 debian 的 unstable 版本开发的，通过 <code>$(lsb_release -cs)</code> 获取到的版本信息为 <strong>unstable</strong>，而 docker 官方源并没支持 debian 的 <strong>unstable</strong> 版本，因此使用 docker 官方教程是安装不成功的。如果你需要安装 docker-ce，请遵循下面的步骤进行安装：</p><h2 id="在-deepin-中安装-docker-最新版的方法" tabindex="-1"><a class="header-anchor" href="#在-deepin-中安装-docker-最新版的方法"><span>在 Deepin 中安装 Docker 最新版的方法</span></a></h2><ol><li>如果以前安装过老版本，要确保先卸载以前版本</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get remove docker.io docker-engine</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>安装密钥管理与下载相关的工具</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span> // 密钥管理（add-apt-repository ca-certificates 等）与下载（curl 等）相关的工具</span></span>
<span class="line"><span>sudo apt-get install apt-transport-https ca-certificates curl python-software-properties software-properties-common</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>下载并安装密钥</li></ol><blockquote><p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。</p></blockquote><p>国内源可选用<a href="https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/" target="_blank" rel="noopener noreferrer">清华大学开源软件镜像站</a>或<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener noreferrer">中科大开源镜像站</a>，示例选用了中科大的。</p><p>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -</span></span>
<span class="line"><span>// 官方源，能否成功可能需要看运气。</span></span>
<span class="line"><span>// curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>查看密钥是否安装成功</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-key fingerprint 0EBFCD88</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果安装成功，会出现如下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>  pub   4096R/0EBFCD88 2017-02-22              Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88  </span></span>
<span class="line"><span>  uid     Docker Release (CE deb) &lt;docker@docker.com&gt;  </span></span>
<span class="line"><span>  sub   4096R/F273FCD8 2017-02-22</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>在 source.list 中添加 docker-ce 软件源（请先查看后面的 <strong>Note</strong>）：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian wheezy stable&quot;</span></span>
<span class="line"><span>// 官方源</span></span>
<span class="line"><span>// sudo add-apt-repository  &quot;deb [arch=amd64] https://download.docker.com/linux/debian wheezy stable&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 15.10 会提示  aptsources.distro.NoDistroTemplateException: Error: could not find a distribution template for Deepin/stable</span></span>
<span class="line"><span>// 这里我们通过编辑 sudo vim /etc/apt/sources.list 添加一行即可，原因未知</span></span>
<span class="line"><span>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian stretch stable&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Note：</strong> 官方在 <code>wheezy</code> 位置使用的是 <code>$(lsb_release -cs)</code>，但之前已经解释过，在 deepin 里运行它得到的是 <strong>unstable</strong>，docker 官方不支持 unstable 版本！因此直接使用官方教程的命令会安装失败。</p><p>**更改方法：**将上述命令中的版本名称 wheezy，替换成 deepin 基于的 debian 版本对应的代号。查看版本号的命令为：<code>cat /etc/debian_version</code>.</p><p>举例：</p><p>a). 对于 deepin 15.5，我操作上面的命令得到 debain 版本是 8.0，debian 8.0 的代号是 <strong>jessie</strong>，把上面的 wheezy 替换成 jessie，就可以正常安装 docker 了。</p><p>b). deepin 15.9.2 基于 debian 9.0 , debian 9.0 的代号为 <strong>stretch</strong>, 所以 deepin 15.9.2 上完整的添加信息为:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian stretch stable&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>c) 对于Deepin 20，使用的是Debian 10 （Buster），所以对应信息：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian buster stable&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>更新仓库</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>安装 docker-ce</li></ol><p>由于网络不稳定，可能会下载失败。如果下载失败了，可以多试几次或者找个合适的时间继续。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install docker-ce</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><s>在安装完后启动报错，查看 docker.service 的 unit 文件，路径为 /lib/systemd/system/docker.service，把 ExecStart=/usr/bin/dockerd -H fd:// 修改为 ExecStart=/usr/bin/dockerd，就能正常启动 docker 了</s></p><p>**Note：**经测试，在 Deepin15.9 中已不需要做修改可直接启动 docker-ce</p><ol><li>启动 docker：</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>systemctl start docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>查看安装的版本信息</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docker version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>验证 docker 是否被正确安装并且能够正常使用</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo docker run hello-world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果能够正常下载，并能够正常执行，则说明 docker 正常安装。</p><ol><li>让普通用户也能运行 docker</li></ol><p>默认情况下，普通用户运行 docker 会有权限问题，每次运行都得加 sudo，很麻烦。把你的账号加到 docker 用户组后就不用加 sudo 了：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo usermod -aG docker $USER</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后注销用户重新登录即可。</p><h2 id="更换国内的-docker-加速器" tabindex="-1"><a class="header-anchor" href="#更换国内的-docker-加速器"><span>更换国内的 docker 加速器</span></a></h2><p>如果使用 docker 官方仓库，速度会很慢，所以更换国内加速器就不可避免了。</p><p>方式一：使用阿里云的docker加速器。</p><ol><li>在阿里云申请一个账号</li></ol><p>打开连接 https://cr.console.aliyun.com/#/accelerator 拷贝您的专属加速器地址。</p><ol><li>修改 daemon 配置文件 /etc/docker/daemon.json 来使用加速器（下面是4个命令，分别单独执行）</li></ol><p><strong>Note：</strong> 这里的 <a href="https://jxus37ad.mirror.aliyuncs.com/" target="_blank" rel="noopener noreferrer">https://jxus37ad.mirror.aliyuncs.com</a> 是申请者的加速器地址，在此仅仅用于演示，而使用者要个根据自己的使用的情况填写自己申请的加速器地址。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo mkdir -p /etc/docker</span></span>
<span class="line"><span>sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [&quot;https://jxus37ad.mirror.aliyuncs.com&quot;]</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>EOF</span></span>
<span class="line"><span>sudo systemctl daemon-reload</span></span>
<span class="line"><span>sudo systemctl restart docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式二：使用 docker-cn 提供的镜像源</p><ol><li>编辑 /etc/docker/daemon.json 文件，并输入 docker-cn 镜像源地址</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo nano /etc/docker/daemon.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输入以下内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>重启 docker 服务</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> restart</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="禁止开机自启" tabindex="-1"><a class="header-anchor" href="#禁止开机自启"><span>禁止开机自启</span></a></h2><p>默认情况下 docker 是开机自启的，如果我们想禁用开机自启，可以通过安装 chkconfig 命令来管理 Deepin 自启项：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 安装chkconfig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> chkconfig</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除自启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> chkconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --del</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后：Deepin 的这个文件格式真的是 Markdown 么？改得特别难受，是不是有 bug...</p><h2 id="修改docker源-etc-docker-daemon-json" tabindex="-1"><a class="header-anchor" href="#修改docker源-etc-docker-daemon-json"><span>修改Docker源 <code>/etc/docker/daemon.json</code></span></a></h2><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">  &quot;registry-mirrors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;http://hub-mirror.c.163.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;https://registry.docker-cn.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;https://nrbewqda.mirror.aliyuncs.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;https://dmmxhzvq.mirror.aliyuncs.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;https://jxus37ad.mirror.aliyuncs.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,71),r=[t];function l(d,o){return s(),i("div",null,r)}const h=e(n,[["render",l],["__file","deepin安装Docker.html.vue"]]),k=JSON.parse('{"path":"/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/Docker/deepin%E5%AE%89%E8%A3%85Docker.html","title":"安装Docker","lang":"zh-CN","frontmatter":{"title":"安装Docker","icon":"fab fa-markdown","order":2,"category":["技术记录"],"tag":["技术","随笔","Docker"],"date":"2024-05-31T00:00:00.000Z","description":"安装Docker deepin安装Docker deepin_64（20社区版） docker-ce 关于 Deepin 中的 Docker (https://wiki.deepin.org/wiki/Docker) 简介 Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux...","head":[["meta",{"property":"og:url","content":"https://jijacky.github.io/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/Docker/deepin%E5%AE%89%E8%A3%85Docker.html"}],["meta",{"property":"og:title","content":"安装Docker"}],["meta",{"property":"og:description","content":"安装Docker deepin安装Docker deepin_64（20社区版） docker-ce 关于 Deepin 中的 Docker (https://wiki.deepin.org/wiki/Docker) 简介 Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-06T10:05:17.000Z"}],["meta",{"property":"article:author","content":"Veeooo"}],["meta",{"property":"article:tag","content":"技术"}],["meta",{"property":"article:tag","content":"随笔"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2024-05-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-06T10:05:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装Docker\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-06T10:05:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Veeooo\\",\\"url\\":\\"https://github.com/jijacky\\"}]}"]]},"headers":[{"level":3,"title":"deepin安装Docker","slug":"deepin安装docker","link":"#deepin安装docker","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"关于 Deepin 中的 Docker","slug":"关于-deepin-中的-docker","link":"#关于-deepin-中的-docker","children":[]},{"level":2,"title":"在 Deepin 中安装 Docker 最新版的方法","slug":"在-deepin-中安装-docker-最新版的方法","link":"#在-deepin-中安装-docker-最新版的方法","children":[]},{"level":2,"title":"更换国内的 docker 加速器","slug":"更换国内的-docker-加速器","link":"#更换国内的-docker-加速器","children":[]},{"level":2,"title":"禁止开机自启","slug":"禁止开机自启","link":"#禁止开机自启","children":[]},{"level":2,"title":"修改Docker源  /etc/docker/daemon.json","slug":"修改docker源-etc-docker-daemon-json","link":"#修改docker源-etc-docker-daemon-json","children":[]}],"git":{"createdTime":1717668317000,"updatedTime":1717668317000,"contributors":[{"name":"jijacky","email":"jijacky@126.com","commits":1}]},"readingTime":{"minutes":4.85,"words":1456},"filePathRelative":"技术记录/Docker/deepin安装Docker.md","localizedDate":"2024年5月31日","excerpt":"\\n<h3>deepin安装Docker</h3>\\n<blockquote>\\n<p>deepin_64（20社区版）</p>\\n<p>docker-ce</p>\\n</blockquote>\\n<p><a href=\\"https://wiki.deepin.org/wiki/Docker\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">关于 Deepin 中的 Docker</a>   (https://wiki.deepin.org/wiki/Docker)</p>\\n<h2>简介</h2>\\n<p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p>","autoDesc":true}');export{h as comp,k as data};
