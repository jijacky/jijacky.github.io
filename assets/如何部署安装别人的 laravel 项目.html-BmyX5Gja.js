import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as n,d as o}from"./app--nBeKGPX.js";const t={},l=o(`<h2 id="如何部署安装别人的-laravel-项目" tabindex="-1"><a class="header-anchor" href="#如何部署安装别人的-laravel-项目"><span>如何部署安装别人的 laravel 项目？</span></a></h2><p>刚下载下来的 laravel 项目，跟正常使用的相比，差一个 <code>.env</code> 文件和一个 <code>vendor</code> 文件夹。需要我们进行处理。</p><h3 id="env-配置" tabindex="-1"><a class="header-anchor" href="#env-配置"><span>.env 配置</span></a></h3><p>复制根目录下的 <code>.env.example</code> 文件并重命名为 <code>.env</code>。<code>.env</code>是项目的示例配置文件，我们需要改成自己的实际配置。</p><blockquote><p>说明如下</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>APP_NAME 就是自己的项目名称比如我现在就是：天真的小窝</span></span>
<span class="line"><span>APP_URL 就是我们的项目链接比如说我的 https://bin.zmide.com/ 本地的话就是我们配置的虚拟主机自定义的本地域名</span></span>
<span class="line"><span>DB_DATABASE 就是我们的数据库名比如说 test</span></span>
<span class="line"><span>DB_USERNAME 数据库用户名比如说 root</span></span>
<span class="line"><span>DB_PASSWORD 数据库密码比如说 123456</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据自己实际情况修改</p><h3 id="vendor-依赖" tabindex="-1"><a class="header-anchor" href="#vendor-依赖"><span>vendor 依赖</span></a></h3><p>vendor 目录不用我们手动创建，在根目录下执行 <code>composer install</code> 命令之后，就会发现根目录下多了个 vendor。 另外，使用 <code>composer update</code> 也会生成 vendor，但是同时会改变 <code>composer.lock</code> 文件，并更新依赖为可用的最新版本。</p><p>这里简单的讲解下 <code>composer install</code> 和 <code>composer update</code> ，项目的开发者在开发的时候会生成 <code>composer.lock</code> 文件，它记录了开发者开发的时候使用的各扩展包的版本号，比如说某个扩展包开发者使用的是 1.0.1 版本。我们使用 <code>composer install</code>， 就是安装跟开发者一样版本的扩展包。而 <code>composer update</code> 则是更新各扩展包，这样的话可能我们某个扩展包 update 到了1.0.2 但是因为开发者还没测过 1.0.2 的兼容而产生错误。而且因为改变了 <code>composer.lock</code> 文件我们在 <code>git pull</code> 拉取新代码的时候也会冲突。如果我们是开发者，我们是需要经常 <code>composer update</code> 更新各扩展包，如果我们是使用者则使用 <code>composer install</code> 即可。</p><p>不能顺利的 install 完，大多是缺少某个 php 扩展，还有一些是因为 php 的版本比较低，install 的时候报错的话看下报错的提示。<code>composer install</code> 如果报错，版本问题的话可以参考我以前踩的坑：解决 <code>composer install</code> 遇到：<code>Your requirements could not be resolved to an installable set of packages</code>。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><p>接着我们需要执行下 <code>php artisan key:generate</code> ，这个是生成 APP_KEY 并自动写入到 .env 文件中的，这个是 laravel 用来加密 cookie 等的。 再接着我们需要执行 <code>php artisan migrate</code>，这个是生成数据表的，关于表迁移可以参考 laravel 官方文档，这时候我们查看数据库会发现创建了一大堆表。如果报错的话，大多是因为 .env 中的数据库账号密码配置的有问题，使用客户端或者其他项目连下数据库检查下。数据库表有了，但是表都是空的。 最后候我们需要执行 <code>php artisan db:seed</code>，这个是用来生成测试数据或者其他的一些基础数据的。现在就可以访问项目试试了，浏览器访问 APP_URL 链接。</p><p>如果首页并不能访问，我们可以查看 <code>routes/web.php</code> 文件里面定义的路由。</p><p>如果需要登录，一般可以通过查看填充文件 <code>database/seeds/UsersTableSeeder.php</code> 查看初始账号密码。</p>`,15),s=[l];function i(c,d){return n(),a("div",null,s)}const v=e(t,[["render",i],["__file","如何部署安装别人的 laravel 项目.html.vue"]]),h=JSON.parse('{"path":"/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85%E5%88%AB%E4%BA%BA%E7%9A%84%20laravel%20%E9%A1%B9%E7%9B%AE.html","title":"如何部署安装别人的 laravel 项目","lang":"zh-CN","frontmatter":{"title":"如何部署安装别人的 laravel 项目","icon":"fab fa-markdown","order":2,"category":["技术记录"],"tag":["技术","随笔"],"date":"2024-05-31T00:00:00.000Z","description":"如何部署安装别人的 laravel 项目？ 刚下载下来的 laravel 项目，跟正常使用的相比，差一个 .env 文件和一个 vendor 文件夹。需要我们进行处理。 .env 配置 复制根目录下的 .env.example 文件并重命名为 .env。.env是项目的示例配置文件，我们需要改成自己的实际配置。 说明如下 根据自己实际情况修改 vend...","head":[["meta",{"property":"og:url","content":"https://jijacky.github.io/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85%E5%88%AB%E4%BA%BA%E7%9A%84%20laravel%20%E9%A1%B9%E7%9B%AE.html"}],["meta",{"property":"og:title","content":"如何部署安装别人的 laravel 项目"}],["meta",{"property":"og:description","content":"如何部署安装别人的 laravel 项目？ 刚下载下来的 laravel 项目，跟正常使用的相比，差一个 .env 文件和一个 vendor 文件夹。需要我们进行处理。 .env 配置 复制根目录下的 .env.example 文件并重命名为 .env。.env是项目的示例配置文件，我们需要改成自己的实际配置。 说明如下 根据自己实际情况修改 vend..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-06T10:05:17.000Z"}],["meta",{"property":"article:author","content":"Veeooo"}],["meta",{"property":"article:tag","content":"技术"}],["meta",{"property":"article:tag","content":"随笔"}],["meta",{"property":"article:published_time","content":"2024-05-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-06T10:05:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何部署安装别人的 laravel 项目\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-06T10:05:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Veeooo\\",\\"url\\":\\"https://github.com/jijacky\\"}]}"]]},"headers":[{"level":2,"title":"如何部署安装别人的 laravel 项目？","slug":"如何部署安装别人的-laravel-项目","link":"#如何部署安装别人的-laravel-项目","children":[{"level":3,"title":".env 配置","slug":"env-配置","link":"#env-配置","children":[]},{"level":3,"title":"vendor 依赖","slug":"vendor-依赖","link":"#vendor-依赖","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]}]}],"git":{"createdTime":1717668317000,"updatedTime":1717668317000,"contributors":[{"name":"jijacky","email":"jijacky@126.com","commits":1}]},"readingTime":{"minutes":2.91,"words":872},"filePathRelative":"技术记录/如何部署安装别人的 laravel 项目.md","localizedDate":"2024年5月31日","excerpt":"<h2>如何部署安装别人的 laravel 项目？</h2>\\n<p>刚下载下来的 laravel 项目，跟正常使用的相比，差一个 <code>.env</code> 文件和一个 <code>vendor</code> 文件夹。需要我们进行处理。</p>\\n<h3>.env 配置</h3>\\n<p>复制根目录下的 <code>.env.example</code> 文件并重命名为 <code>.env</code>。<code>.env</code>是项目的示例配置文件，我们需要改成自己的实际配置。</p>\\n<blockquote>\\n<p>说明如下</p>\\n</blockquote>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>APP_NAME 就是自己的项目名称比如我现在就是：天真的小窝</span></span>\\n<span class=\\"line\\"><span>APP_URL 就是我们的项目链接比如说我的 https://bin.zmide.com/ 本地的话就是我们配置的虚拟主机自定义的本地域名</span></span>\\n<span class=\\"line\\"><span>DB_DATABASE 就是我们的数据库名比如说 test</span></span>\\n<span class=\\"line\\"><span>DB_USERNAME 数据库用户名比如说 root</span></span>\\n<span class=\\"line\\"><span>DB_PASSWORD 数据库密码比如说 123456</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{v as comp,h as data};
